/*
 * Copyright 2017 NXP
 * Copyright 2018-2019 Variscite Ltd.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;

#include "fsl-imx8mq.dtsi"

/ {
	compatible = "variscite,imx8m-dart", "fsl,imx8mq";

	chosen {
		bootargs = "console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200";
		stdout-path = &uart1;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_audio: audio_vdd {
			compatible = "regulator-fixed";
			regulator-name = "wm8904_supply";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		reg_wifi_en: wifi_en {
			compatible = "regulator-fixed";
			regulator-name = "WIFI_REG_ON";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
		};
	};

	sound-wm8904 {
		compatible = "fsl,imx-audio-wm8904";
		model = "imx-wm8904";
		audio-cpu = <&sai3>;
		audio-codec = <&wm8904>;
		audio-routing =
			"Headphone Jack", "HPOUTL",
			"Headphone Jack", "HPOUTR",
			"IN2L", "Line In Jack",
			"IN2R", "Line In Jack",
			"IN1L", "Mic Jack",
			"Playback", "CPU-Playback",
			"CPU-Capture", "Capture";
		status = "okay";
	};

	sound-hdmi {
		compatible = "fsl,imx8mq-evk-cdnhdmi",
				"fsl,imx-audio-cdnhdmi";
		model = "imx-audio-hdmi";
		audio-cpu = <&sai4>;
		protocol = <1>;
		hdmi-out;
		constraint-rate = <44100>,
				<88200>,
				<176400>,
				<32000>,
				<48000>,
				<96000>,
				<192000>;
		status = "disabled";
	};

	sound-spdif {
		compatible = "fsl,imx-audio-spdif";
		model = "imx-spdif";
		spdif-controller = <&spdif1>;
		spdif-out;
		spdif-in;
		status = "disabled";
	};

	sound-hdmi-arc {
		compatible = "fsl,imx-audio-spdif";
		model = "imx-hdmi-arc";
		spdif-controller = <&spdif2>;
		spdif-in;
		status = "disabled";
	};

	backlight: backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm1 0 1000000 0>;
		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <80>;
		status = "disabled";
	};

	gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_keys>;
		status = "disabled";

		up {
			label = "Up";
			gpios = <&gpio4 18 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_UP>;
		};

		down {
			label = "Down";
			gpios = <&gpio4 15 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_DOWN>;
		};

		home {
			label = "Home";
			gpios = <&gpio4 13 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_HOME>;
		};

		back {
			label = "Back";
			gpios = <&gpio4 6 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_BACK>;
		};
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_leds>;
		status = "disabled";

		emmc {
			label = "eMMC";
			gpios = <&gpio4 17 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc0";
		};
	};
};

&clk {
	assigned-clocks = <&clk IMX8MQ_AUDIO_PLL1>;
	assigned-clock-rates = <786432000>;
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	imx8m-var-dart {

		pinctrl_hog: hoggrp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_RXD0_GPIO4_IO2		0x40000011
				MX8MQ_IOMUXC_SAI1_RXD4_GPIO4_IO6		0x40000011
				MX8MQ_IOMUXC_SAI1_TXD5_GPIO4_IO17		0x40000011
				MX8MQ_IOMUXC_SAI1_TXD0_GPIO4_IO12		0x40000011
				MX8MQ_IOMUXC_SAI1_TXD3_GPIO4_IO15		0x40000011
				MX8MQ_IOMUXC_SAI1_RXD1_GPIO4_IO3		0x40000011
				MX8MQ_IOMUXC_SAI1_TXD4_GPIO4_IO16		0x40000011
				MX8MQ_IOMUXC_GPIO1_IO01_GPIO1_IO1		0x40000011
				MX8MQ_IOMUXC_SAI1_RXFS_GPIO4_IO0		0x40000011
				MX8MQ_IOMUXC_SD2_WP_GPIO2_IO20			0x40000011
				MX8MQ_IOMUXC_SAI2_TXFS_GPIO4_IO24		0x40000011
				MX8MQ_IOMUXC_SAI2_RXC_GPIO4_IO22		0x40000011
				MX8MQ_IOMUXC_SAI2_MCLK_GPIO4_IO27		0x40000011
				MX8MQ_IOMUXC_SAI2_TXC_GPIO4_IO25		0x40000011
				MX8MQ_IOMUXC_SAI2_TXD0_GPIO4_IO26		0x40000011
				MX8MQ_IOMUXC_SAI2_RXFS_GPIO4_IO21		0x40000011
				MX8MQ_IOMUXC_NAND_DATA05_GPIO3_IO11		0x40000011
				MX8MQ_IOMUXC_NAND_CLE_GPIO3_IO5			0x40000011
				MX8MQ_IOMUXC_NAND_CE2_B_GPIO3_IO3		0x40000011
				MX8MQ_IOMUXC_NAND_DATA01_GPIO3_IO7		0x40000011
				MX8MQ_IOMUXC_NAND_CE0_B_GPIO3_IO1		0x40000011
				MX8MQ_IOMUXC_NAND_READY_B_GPIO3_IO16		0x40000011
				MX8MQ_IOMUXC_NAND_DQS_GPIO3_IO14		0x40000011
				MX8MQ_IOMUXC_GPIO1_IO02_GPIO1_IO2		0x40000011
				MX8MQ_IOMUXC_NAND_WP_B_GPIO3_IO18		0x40000011
				MX8MQ_IOMUXC_NAND_WE_B_GPIO3_IO17		0x40000011
				MX8MQ_IOMUXC_NAND_DATA03_GPIO3_IO9		0x40000011
				MX8MQ_IOMUXC_NAND_DATA00_GPIO3_IO6		0x40000011
				MX8MQ_IOMUXC_NAND_DATA02_GPIO3_IO8		0x40000011
				MX8MQ_IOMUXC_SAI5_RXFS_GPIO3_IO19		0x40000011
				MX8MQ_IOMUXC_SAI5_RXD0_GPIO3_IO21		0x40000011
				MX8MQ_IOMUXC_SAI5_RXD2_GPIO3_IO23	 	0x40000011
				MX8MQ_IOMUXC_SAI5_RXC_GPIO3_IO20		0x40000011
				MX8MQ_IOMUXC_SAI5_RXD1_GPIO3_IO22		0x40000011
				MX8MQ_IOMUXC_SAI5_RXD3_GPIO3_IO24		0x40000011
				MX8MQ_IOMUXC_SAI5_MCLK_GPIO3_IO25		0x40000011
				MX8MQ_IOMUXC_SAI1_RXC_GPIO4_IO1			0x40000011
				MX8MQ_IOMUXC_SAI1_RXD2_GPIO4_IO4		0x40000011
				MX8MQ_IOMUXC_SAI1_TXD1_GPIO4_IO13		0x40000011
				MX8MQ_IOMUXC_SAI1_RXD3_GPIO4_IO5		0x40000011
				MX8MQ_IOMUXC_SAI1_TXD6_GPIO4_IO18		0x40000011
				MX8MQ_IOMUXC_SAI1_TXD2_GPIO4_IO14		0x40000011
				MX8MQ_IOMUXC_GPIO1_IO11_GPIO1_IO11		0x40000011
				MX8MQ_IOMUXC_SD2_CD_B_GPIO2_IO12		0x40000011
				MX8MQ_IOMUXC_SD2_RESET_B_GPIO2_IO19		0x40000011
				MX8MQ_IOMUXC_SAI2_RXD0_GPIO4_IO23		0x40000011
			>;
		};

		pinctrl_csi1: csi1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_RXD6_GPIO4_IO8		0x19
				MX8MQ_IOMUXC_UART4_RXD_GPIO5_IO28		0x19
			>;
		};

		pinctrl_csi2: csi2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_RXD7_GPIO4_IO9		0x19
				MX8MQ_IOMUXC_UART4_TXD_GPIO5_IO29		0x19
			>;
		};

		pinctrl_fec1: fec1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_ENET_MDC_ENET1_MDC			0x3
				MX8MQ_IOMUXC_ENET_MDIO_ENET1_MDIO		0x23
				MX8MQ_IOMUXC_ENET_TD3_ENET1_RGMII_TD3		0x1f
				MX8MQ_IOMUXC_ENET_TD2_ENET1_RGMII_TD2		0x1f
				MX8MQ_IOMUXC_ENET_TD1_ENET1_RGMII_TD1		0x1f
				MX8MQ_IOMUXC_ENET_TD0_ENET1_RGMII_TD0		0x1f
				MX8MQ_IOMUXC_ENET_RD3_ENET1_RGMII_RD3		0x91
				MX8MQ_IOMUXC_ENET_RD2_ENET1_RGMII_RD2		0x91
				MX8MQ_IOMUXC_ENET_RD1_ENET1_RGMII_RD1		0x91
				MX8MQ_IOMUXC_ENET_RD0_ENET1_RGMII_RD0		0x91
				MX8MQ_IOMUXC_ENET_TXC_ENET1_RGMII_TXC		0x1f
				MX8MQ_IOMUXC_ENET_RXC_ENET1_RGMII_RXC		0x91
				MX8MQ_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL	0x91
				MX8MQ_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL	0x1f
				MX8MQ_IOMUXC_GPIO1_IO09_GPIO1_IO9		0x19
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C1_SCL_I2C1_SCL			0x4000007f
				MX8MQ_IOMUXC_I2C1_SDA_I2C1_SDA			0x4000007f
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C2_SCL_I2C2_SCL			0x4000007f
				MX8MQ_IOMUXC_I2C2_SDA_I2C2_SDA			0x4000007f
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C3_SCL_I2C3_SCL			0x4000007f
				MX8MQ_IOMUXC_I2C3_SDA_I2C3_SDA			0x4000007f
			>;
		};

		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C4_SCL_I2C4_SCL			0x4000007f
				MX8MQ_IOMUXC_I2C4_SDA_I2C4_SDA			0x4000007f
			>;
		};

		pinctrl_pcie0: pcie0grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_RXD5_GPIO4_IO7		0x16
			>;
		};

		pinctrl_pcie1: pcie1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_TXD7_GPIO4_IO19		0x16
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART1_RXD_UART1_DCE_RX		0x49
				MX8MQ_IOMUXC_UART1_TXD_UART1_DCE_TX		0x49
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART2_RXD_UART2_DCE_RX		0x49
				MX8MQ_IOMUXC_UART2_TXD_UART2_DCE_TX		0x49
			>;
		};

		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART3_RXD_UART3_DCE_RX		0x49
				MX8MQ_IOMUXC_UART3_TXD_UART3_DCE_TX		0x49
			>;
		};

		pinctrl_uart4: uart4grp {
			fsl,pins = <
				MX8MQ_IOMUXC_ECSPI2_SCLK_UART4_DCE_RX		0xc1
				MX8MQ_IOMUXC_ECSPI2_MOSI_UART4_DCE_TX		0xc1
				MX8MQ_IOMUXC_ECSPI2_MISO_UART4_DCE_CTS_B	0xc1
				MX8MQ_IOMUXC_ECSPI2_SS0_UART4_DCE_RTS_B		0xc1
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x83
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xc3
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xc3
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xc3
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xc3
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xc3
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xc3
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xc3
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xc3
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xc3
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x83
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x8d
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xcd
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xcd
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xcd
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xcd
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xcd
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xcd
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xcd
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xcd
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xcd
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x8d
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x9f
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xdf
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xdf
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xdf
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xdf
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xdf
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xdf
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xdf
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xdf
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xdf
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x9f
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc2_sd: usdhc2grpsd {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CD_B_GPIO2_IO12		0x41
				MX8MQ_IOMUXC_SD2_RESET_B_GPIO2_IO19		0x41
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x83
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc3
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc3
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc3
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc3
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc3
			>;
		};

		pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x8d
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xcd
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xcd
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xcd
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xcd
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xcd
			>;
		};

		pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x9f
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xdf
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xdf
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xdf
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xdf
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xdf
			>;
		};

		pinctrl_sai3: sai3grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI3_RXFS_SAI3_RX_SYNC		0xd6
				MX8MQ_IOMUXC_SAI3_RXC_SAI3_RX_BCLK		0xd6
				MX8MQ_IOMUXC_SAI3_RXD_SAI3_RX_DATA0		0xd6
				MX8MQ_IOMUXC_SAI3_TXFS_SAI3_TX_SYNC		0xd6
				MX8MQ_IOMUXC_SAI3_TXC_SAI3_TX_BCLK		0xd6
				MX8MQ_IOMUXC_SAI3_TXD_SAI3_TX_DATA0		0xd6
				MX8MQ_IOMUXC_SAI3_MCLK_SAI3_MCLK		0xd6
			>;
		};

		pinctrl_spdif1: spdif1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SPDIF_TX_SPDIF1_OUT		0xd6
				MX8MQ_IOMUXC_SPDIF_RX_SPDIF1_IN			0xd6
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B 		0xc6
			>;
		};

		pinctrl_pwm1: pwm1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO01_PWM1_OUT 		0x06
			>;
		};

		pinctrl_captouch: captouchgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_RXD3_GPIO4_IO5 		0x16
				MX8MQ_IOMUXC_GPIO1_IO14_GPIO1_IO14		0x16
			>;
		};

		pinctrl_rtc: rtcgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO15_GPIO1_IO15 		0xc1
			>;
		};

		pinctrl_gpio_keys: keygrp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_TXD3_GPIO4_IO15		0xc6
				MX8MQ_IOMUXC_SAI1_TXD6_GPIO4_IO18		0xc6
				MX8MQ_IOMUXC_SAI1_TXD1_GPIO4_IO13		0xc6
				MX8MQ_IOMUXC_SAI1_RXD4_GPIO4_IO6		0xc6
			>;
		};

		pinctrl_leds: ledgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_RXD1_GPIO4_IO3		0xc6
				MX8MQ_IOMUXC_SAI1_TXD2_GPIO4_IO14		0xc6
				MX8MQ_IOMUXC_SAI1_RXD2_GPIO4_IO4		0xc6
				MX8MQ_IOMUXC_SAI1_TXD5_GPIO4_IO17		0xc6
			>;
		};

		pinctrl_wifi: wifigrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO04_GPIO1_IO4		0xc1	/* WIFI_PWR_VSEL */
				MX8MQ_IOMUXC_GPIO1_IO08_GPIO1_IO8		0xc1	/* WIFI_PWR_ON   */
				MX8MQ_IOMUXC_NAND_CE1_B_GPIO3_IO2		0xc1	/* WIFI_REG_ON   */
				MX8MQ_IOMUXC_GPIO1_IO00_ANAMIX_REF_CLK_32K	0xc1	/* WIFI_CLK_32K  */
				MX8MQ_IOMUXC_NAND_CE3_B_GPIO3_IO4		0xc1	/* BT_REG_ON     */
				MX8MQ_IOMUXC_SPDIF_EXT_CLK_GPIO5_IO5		0xc1	/* BT_BUF_EN     */
			>;
		};

		pinctrl_ethphy: ethphygrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO08_GPIO1_IO8		0xc1
			>;
		};

		pinctrl_ecspi1: ecspi1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_ECSPI1_SCLK_ECSPI1_SCLK		0x11
				MX8MQ_IOMUXC_ECSPI1_MOSI_ECSPI1_MOSI		0x11
				MX8MQ_IOMUXC_ECSPI1_MISO_ECSPI1_MISO		0x11
				MX8MQ_IOMUXC_ECSPI1_SS0_GPIO5_IO9		0x11
			>;
		};

		pinctrl_restouch: restouchgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO03_GPIO1_IO3		0xc0
			>;
		};

		pinctrl_typec: typecgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO10_GPIO1_IO10		0x16
			>;
		};

		pinctrl_lvds: lvdsgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO11_GPIO1_IO11		0x16
			>;
		};

		pinctrl_hdmi: hdmigrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO05_GPIO1_IO5		0xc1
			>;
		};
	};
};

&fec1 {
	phy-mode = "rgmii";
	phy-handle = <&ethphy0>;
	fsl,magic-packet;
	status = "okay";
	phy-reset-gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <10>;

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <0>;
			at803x,led-act-blind-workaround;
			at803x,eee-disabled;
		};
	};
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		reg = <0x08>;

		regulators {
			sw1a_reg: sw1ab {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
			};

			sw1c_reg: sw1c {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			sw3a_reg: sw3ab {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-always-on;
			};

			vgen1_reg: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
				regulator-always-on;
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen4_reg: vgen4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vgen5 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};
		};
	};

	wm8904: codec@1a {
		compatible = "wlf,wm8904";
		reg = <0x1a>;
		clocks = <&clk IMX8MQ_CLK_SAI3_ROOT>;
		clock-names = "mclk";
		DCVDD-supply = <&reg_audio>;
		DBVDD-supply = <&reg_audio>;
		AVDD-supply = <&reg_audio>;
		CPVDD-supply = <&reg_audio>;
		MICVDD-supply = <&reg_audio>;
		gpio-cfg = <
			0x0018 /* GPIO1 => DMIC_CLK */
			0xffff /* GPIO2 => don't touch */
			0xffff /* GPIO3 => don't touch */
			0xffff /* GPIO4 => don't touch */
		>;
		status = "okay";
	};

	reg_cpu_dvfs: tps62361@60 {
		reg = <0x60>;
		compatible = "ti,tps62361";
		regulator-min-microvolt = <900000>;
		regulator-max-microvolt = <1000000>;
		regulator-name = "arm-supply";
		regulator-boot-on;
		regulator-always-on;
		ti,enable-force-pwm;
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	/* DS1337 RTC module */
	rtc@0x68 {
		status = "disabled";
		compatible = "dallas,ds1337";
		reg = <0x68>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_rtc>;
		interrupt-parent = <&gpio1>;
		interrupts = <15 IRQ_TYPE_EDGE_FALLING>;
	};

	/* Capacitive touch controller */
	ft5x06_ts: ft5x06_ts@38 {
		status = "disabled";
		compatible = "edt,edt-ft5x06";
		reg = <0x38>;
		reset-gpios = <&gpio4 5 GPIO_ACTIVE_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_captouch>;
		interrupt-parent = <&gpio1>;
		interrupts = <14 0>;
		touchscreen-size-x = <800>;
		touchscreen-size-y = <480>;
		touchscreen-inverted-x;
		touchscreen-inverted-y;
	};

	/* USB-C controller */
	typec_ptn5150: typec@3d {
		status = "disabled";
		compatible = "nxp,ptn5150";
		reg = <0x3d>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_typec>;
		connect-gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
	};

	ov5640_mipi1: ov5640_mipi1@3c {
		status = "okay";
		compatible = "ovti,ov5640_mipi";
		reg = <0x3c>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_csi1>;
		clocks = <&clk IMX8MQ_CLK_CLKO2>;
		clock-names = "csi_mclk";
/* Disabled CLKO2, since DART-MX8M camera expansion board uses
 * its own oscillator. Enable CLK02 if your desing requres it
 */
#if 0
		assigned-clocks = <&clk IMX8MQ_CLK_CLKO2>;
		assigned-clock-parents = <&clk IMX8MQ_SYS2_PLL_200M>;
		assigned-clock-rates = <24000000>;
#endif
		csi_id = <0>;
		mclk = <24000000>;
		mclk_source = <0>;
		port {
			ov5640_mipi1_ep: endpoint {
				remote-endpoint = <&mipi1_sensor_ep>;
			};
		};
	};
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
};

&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "disabled";

	ov5640_mipi2: ov5640_mipi2@3c {
		status = "disabled";
		compatible = "ovti,ov5640_mipi";
		reg = <0x3c>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_csi2>;

		clocks = <&clk IMX8MQ_CLK_CLKO2>;
		clock-names = "csi_mclk";
/* Disabled CLKO2, since DART-MX8M camera expansion board uses
 * its own oscillator. Enable CLK02 if your desing requres it
 */
#if 0
		assigned-clocks = <&clk IMX8MQ_CLK_CLKO2>;
		assigned-clock-parents = <&clk IMX8MQ_SYS2_PLL_200M>;
		assigned-clock-rates = <24000000>;
#endif
		csi_id = <1>;
		mclk = <24000000>;
		mclk_source = <0>;
		port {
			ov5640_mipi2_ep: endpoint {
				remote-endpoint = <&mipi2_sensor_ep>;
			};
		};
	};
};

&pcie0 {
	fsl,max-link-speed = <1>;
	ext_osc = <1>;
	status = "okay";
	hard-wired;
};

&pcie1 {
	fsl,max-link-speed = <1>;
	ext_osc = <1>;
	status = "okay";
	hard-wired;
};

/* Console */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

/* Header */
&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART2>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "disabled";
};

/* Header */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "disabled";
};

/* Bluetooth */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MQ_SYS1_PLL_80M>;
	fsl,uart-has-rtscts;
	status = "disabled";
};

/* eMMC */
&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

&usb3_phy0 {
	status = "okay";
};

&usb3_0 {
	status = "okay";
};

&usb_dwc3_0 {
	status = "okay";
	extcon = <&typec_ptn5150>;
	dr_mode = "host";
};

&usb3_phy1 {
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&usb_dwc3_1 {
	status = "okay";
	dr_mode = "host";
};

&sai3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
	assigned-clocks = <&clk IMX8MQ_CLK_SAI3>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <1536000>;
	status = "okay";
};

&sai4 {
	assigned-clocks = <&clk IMX8MQ_CLK_SAI4>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <24576000>;
	status = "disabled";
};

&spdif1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_spdif1>;
	assigned-clocks = <&clk IMX8MQ_CLK_SPDIF1>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <24576000>;
	status = "disabled";
};

&spdif2 {
	assigned-clocks = <&clk IMX8MQ_CLK_SPDIF2>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <24576000>;
	status = "disabled";
};

&gpu_pd {
	power-supply = <&sw1a_reg>;
};

&vpu_pd {
	power-supply = <&sw1c_reg>;
};

&gpu {
	status = "okay";
};

&vpu {
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "disabled";
};

&mu {
	status = "okay";
};

&rpmsg{
	/*
	 * 64K for one rpmsg instance:
	 * --0xb8000000~0xb800ffff: pingpong
	 */
	vdev-nums = <1>;
	reg = <0x0 0xb8000000 0x0 0x10000>;
	status = "okay";
};

&A53_0 {
	operating-points = <
		/* kHz    uV */
		1500000 1000000
		1300000 1000000
		1000000 900000
		800000  900000
	>;
	dc-supply = <&reg_cpu_dvfs>;
};

&csi1_bridge {
	fsl,mipi-mode;
	fsl,two-8bit-sensor-mode;
	status = "okay";

	port {
		csi1_ep: endpoint {
			remote-endpoint = <&csi1_mipi_ep>;
		};
	};
};

&csi2_bridge {
	fsl,mipi-mode;
	fsl,two-8bit-sensor-mode;
	status = "okay";

	port {
		csi2_ep: endpoint {
			remote-endpoint = <&csi2_mipi_ep>;
		};
	};
};

&mipi_csi_1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	port {
		mipi1_sensor_ep: endpoint1 {
			remote-endpoint = <&ov5640_mipi1_ep>;
			data-lanes = <1 2>;
		};

		csi1_mipi_ep: endpoint2 {
			remote-endpoint = <&csi1_ep>;
		};
	};
};

&mipi_csi_2 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	port {
		mipi2_sensor_ep: endpoint1 {
			remote-endpoint = <&ov5640_mipi2_ep>;
			data-lanes = <1 2>;
		};

		csi2_mipi_ep: endpoint2 {
			remote-endpoint = <&csi2_ep>;
		};
	};
};

&mipi_dsi {
	status = "disabled";
	assigned-clocks = <&clk IMX8MQ_CLK_DSI_PHY_REF>,
			  <&clk IMX8MQ_CLK_DSI_CORE>,
			  <&clk IMX8MQ_VIDEO_PLL1_REF_SEL>,
			  <&clk IMX8MQ_VIDEO_PLL1>;
	assigned-clock-parents = <&clk IMX8MQ_VIDEO_PLL1_OUT>,
				 <&clk IMX8MQ_SYS1_PLL_266M>,
				 <&clk IMX8MQ_CLK_25M>;
	assigned-clock-rates = <24000000>,
			       <266000000>,
			       <0>,
			       <599999999>;
};

&mipi_dsi_bridge {
	status = "disabled";

	panel@0 {
		reg = <0>;
		status = "okay";
		compatible = "sgd,gktw70sdae4sd";
		dsi-lanes = <4>;
		panel-width-mm  = <154>;
		panel-height-mm = <87>;

		port {
			panel_in: endpoint {
				remote-endpoint = <&mipi_dsi_bridge_out>;
			};
		};
	};

	port@1 {
		mipi_dsi_bridge_out: endpoint {
			remote-endpoint = <&panel_in>;
		};
	};
};

&ecspi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	cs-gpios = <&gpio5 9 0>;
	fsl,spi-num-chipselects = <1>;
	status = "disabled";

	/* Resistive touch controller */
	ads7846@0 {
		reg = <0>;
		compatible = "ti,ads7846";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_restouch>;
		interrupt-parent = <&gpio1>;
		interrupts = <3 IRQ_TYPE_EDGE_FALLING>;
		spi-max-frequency = <1500000>;
		pendown-gpio = <&gpio1 3 GPIO_ACTIVE_LOW>;
		ti,x-min = /bits/ 16 <125>;
		ti,x-max = /bits/ 16 <4008>;
		ti,y-min = /bits/ 16 <282>;
		ti,y-max = /bits/ 16 <3864>;
		ti,x-plate-ohms = /bits/ 16 <180>;
		ti,pressure-max = /bits/ 16 <255>;
		ti,debounce-max = /bits/ 16 <10>;
		ti,debounce-tol = /bits/ 16 <3>;
		ti,debounce-rep = /bits/ 16 <1>;
		ti,settle-delay-usec = /bits/ 16 <150>;
		ti,keep-vref-on;
		wakeup-source;
		status = "disabled";
	};
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "disabled";
};

&snvs_rtc {
	status = "disabled";
};
